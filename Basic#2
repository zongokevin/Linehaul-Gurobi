print ('Hello World')
distanceTable= {
  ('brampton','tropicana'):788,
  ('brampton','montreal'):569,
  ('brampton','moncton'):1565,
  ('brampton','brampton'):0,
  ('tropicana','brampton'):788,
  ('tropicana','montreal'):614,
  ('tropicana','moncton'):1208,
  ('tropicana','tropicana'):0,
  ('montreal','brampton'):569,
  ('montreal','tropicana'):614,
  ('montreal','moncton'):991,
  ('montreal','montreal'):0,
  ('moncton','brampton'):1565,
  ('moncton','tropicana'):1208,
  ('moncton','montreal'):991,
  ('moncton','moncton'):0}
  
hoursDTable={
  ('brampton','tropicana'):7.45,
  ('brampton','montreal'):5.45,
  ('brampton','moncton'):15.05,
  ('brampton','brampton'):0,
  ('tropicana','brampton'):7.45,
  ('tropicana','montreal'):5.95,
  ('tropicana','moncton'):11.70,
  ('tropicana','tropicana'):0,
  ('montreal','brampton'):5.45,
  ('montreal','tropicana'):5.95,
  ('montreal','moncton'):9.87,
  ('montreal','montreal'):0,
  ('moncton','brampton'):15.05,
  ('moncton','tropicana'):11.70,
  ('moncton','montreal'):9.87,
  ('moncton','moncton'):0}
  
GPSdinstanceTable = {
	('A','brampton'):0,
  ('A','montreal'):569,
  ('A','moncton'):1565,
  ('A','tropicana'):788,
  ('B','brampton'):569,
  ('B','montreal'):0,
  ('B','moncton'):991,
  ('B','tropicana'):614,
  ('C','brampton'):619,
  ('C','montreal'):50,
  ('C','moncton'):941,
  ('C','tropicana'):664,
  ('D','brampton'):1565,
  ('D','montreal'):991,
  ('D','moncton'):0,
  ('D','tropicana'):1208,
  ('E','brampton'):996,
  ('E','montreal'):822,
  ('E','moncton'):1000,
  ('E','tropicana'):208,
  ('F','brampton'):580,
  ('F','montreal'):822,
  ('F','moncton'):1416,
  ('F','tropicana'):208}

GPShoursTable = {
	('A','brampton'):0,
  ('A','montreal'):5.45,
  ('A','moncton'):15.05,
  ('A','tropicana'):7.45,
  ('B','brampton'):5.45,
  ('B','montreal'):0,
  ('B','moncton'):9.87,
  ('B','tropicana'):5.95,
  ('C','brampton'):5.99,
  ('C','montreal'):0.48,
  ('C','moncton'):9.11,
  ('C','tropicana'):6.43,
  ('D','brampton'):15.05,
  ('D','montreal'):9.87,
  ('D','moncton'):0,
  ('D','tropicana'):11.70,
  ('E','brampton'):9.64,
  ('E','montreal'):7.96,
  ('E','moncton'):9.68,
  ('E','tropicana'):2.01,
  ('F','brampton'):5.61,
  ('F','montreal'):7.96,
  ('F','moncton'):13.71,
  ('F','tropicana'):2.01}

Terminal =['brampton','tropicana','montreal','moncton']

CM=1.5

ID, Rate= multidict({
	'A':22.5,
	'B':22.5,
	'C':26,
	'D':24,
	'E':27,
	'F':25.18})

Avail = {'A':1,'B':0,'C':1,'D':1,'E':1,'F':1}

Orders=[('brampton','tropicana'),('montreal','brampton'),('moncton','montreal'),('tropicana','montreal')]

def orderDistance(FromTo,distanceTable):
	distance=float(distanceTable[FromTo])
	return distance

def orderHour(FromTo,hoursDTable):
    hours=float(hoursDTable[FromTo])
    return hours

def driverDistancePosition((Driver,To),GPSdinstanceTable):
	distance=float(GPSdinstanceTable[(Driver,To)])
	return distance

def driverHoursPosition((Driver,To),GPShoursTable):
	distance=float(GPShoursTable[(Driver,To)])
	return distance

def createProDistance():
	i=1
	CP = {i:orderDistance(Orders[i-1],distanceTable)}
	for j in range(i+1,len(Orders)+1):
		CP[j]=orderDistance(Orders[j-1],distanceTable)
	return CP

def createProHours():
    i=1
    OH = {i:orderHour(Orders[i-1],hoursDTable)}
    for j in range(i+1,len(Orders)+1):
        OH[j]=orderHour(Orders[j-1],hoursDTable)
    return OH

def createDdrive():
	distance={}
	for i in ID:
		for (From,To) in Orders:
			distance[i,From]= driverDistancePosition((i,From),GPSdinstanceTable)
	return distance

def createHdrive():
	hours={}
	for i in ID:
		for (From,To) in Orders:
			hours[i,From]= driverHoursPosition((i,From),GPShoursTable)
	return hours


Pro,D = multidict(createProDistance())

H = createProHours()

Ddrive = createDdrive()

Hdrive = createHdrive()


###Juste pour Visual Studio
#def numeroPro():
 #   Num=[]
  #  for j in range(1,len(Orders)+1):
   #     Num[len(Num):]= [j]
    #return Num

#D = createProDistance() 
#Pro = numeroPro()




print(Pro)
print(D)
print(Orders)
print (H)
print(orderHour(Orders[('montreal','brampton')],hoursDTable))






	

		
		

