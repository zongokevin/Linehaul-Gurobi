

Terminal =['brampton','tropicana','montreal','moncton']

TerminalCountry = {'brampton':'CAD','tropicana':'US','montreal':'CAD','moncton':'CAD'}

Orders=[('brampton','tropicana'),('montreal','brampton'),('moncton','montreal'),('tropicana','montreal')]

CM=1.5

ID, Rate= multidict({
	'A':22.5,
	'B':22.5,
	'C':26,
	'D':24,
	'E':27,
	'F':25.18})

Avail = {'A':1,'B':0,'C':1,'D':1,'E':1,'F':1}

Orders=[('brampton','tropicana'),('montreal','brampton'),('moncton','montreal'),('tropicana','montreal')]

USF = {'A':1,'B':0,'C':1,'D':1,'E':1,'F':0}

def USdepartureOrDestination ((From,To)):
	if TerminalCountry[From]=='US' or TerminalCountry[To]=='US':
		result = 1
	else:
		result = 0
	return result

def createProFromToUS():
	table = {}
	for k in Pro:
		table[k]=USdepartureOrDestination(Orders[k-1])
	return table

# if the pro is from or going to a US terminal

ProFromToUS = createProFromToUS()

for i in ID:
  for j in Pro:
    model.addConstr(DE[i,j]+ProFromToUS[j]<=USF[i]+1,"Driver%s,is a US fleet"%i)
	#model.addConstr(DE[i,1]+DE[i,2]+DE[i,3]+DE[i,4]<=Avail[i],"Driver%s,availibility"%i)
#constrainte for the availibility of drivers
